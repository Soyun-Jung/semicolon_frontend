[{"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\App.js":"1","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\index.js":"2","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Styles\\GlobalStyles.js":"3","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Styles\\Theme.js":"4","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Feed.js":"5","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Apollo\\Client.js":"6","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Apollo\\LocalState.js":"7","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Button.js":"8","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Footer.js":"9","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Input.js":"10","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Hooks\\UseInput.js":"11","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Hooks\\useInput.js":"12","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Auth\\AuthQueries.js":"13","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Auth\\AuthPresenter.js":"14","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Auth\\AuthContainer.js":"15","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Auth\\index.js":"16","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Explore.js":"17","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Header.js":"18","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Icons.js":"19","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Routes.js":"20","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Loader.js":"21","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Post\\PostContainer.js":"22","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Post\\index.js":"23","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Post\\PostPresenter.js":"24","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Avatar.js":"25","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FatText.js":"26","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Post\\PostQueries.js":"27","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\SharedQueries.js":"28","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Search\\SearchContainer.js":"29","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Search\\SearchPresenter.js":"30","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Search\\SearchQueries.js":"31","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\UserCard.js":"32","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Search\\index.js":"33","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FollowButton\\FollowButtonContainer.js":"34","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FollowButton\\FollowButtonQueries.js":"35","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FollowButton\\FollowButtonPresenter.js":"36","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FollowButton\\index.js":"37","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\SquarePost.js":"38","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\DetailPost.js":"39","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Profile\\index.js":"40","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Profile\\ProfilePresenter.js":"41","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Profile\\ProfileContainer.js":"42"},{"size":1162,"mtime":1611050375773,"results":"43","hashOfConfig":"44"},{"size":311,"mtime":1610953151086,"results":"45","hashOfConfig":"44"},{"size":751,"mtime":1611053588889,"results":"46","hashOfConfig":"44"},{"size":594,"mtime":1611103694354,"results":"47","hashOfConfig":"44"},{"size":1511,"mtime":1611106948384,"results":"48","hashOfConfig":"44"},{"size":325,"mtime":1611050104282,"results":"49","hashOfConfig":"44"},{"size":606,"mtime":1611187526349,"results":"50","hashOfConfig":"44"},{"size":907,"mtime":1611125176769,"results":"51","hashOfConfig":"44"},{"size":1921,"mtime":1611132114656,"results":"52","hashOfConfig":"44"},{"size":890,"mtime":1611050164671,"results":"53","hashOfConfig":"44"},{"size":276,"mtime":1610957424908,"results":"54","hashOfConfig":"44"},{"size":276,"mtime":1611105348003,"results":"55","hashOfConfig":"44"},{"size":764,"mtime":1611030110112,"results":"56","hashOfConfig":"44"},{"size":2273,"mtime":1611029526937,"results":"57","hashOfConfig":"44"},{"size":3356,"mtime":1611188800693,"results":"58","hashOfConfig":"44"},{"size":75,"mtime":1610960180250,"results":"59","hashOfConfig":"44"},{"size":41,"mtime":1611034528906,"results":"60","hashOfConfig":"44"},{"size":2563,"mtime":1611108588183,"results":"61","hashOfConfig":"44"},{"size":4486,"mtime":1611127709867,"results":"62","hashOfConfig":"44"},{"size":1123,"mtime":1611188666477,"results":"63","hashOfConfig":"44"},{"size":1455,"mtime":1611050166303,"results":"64","hashOfConfig":"44"},{"size":3313,"mtime":1611139492288,"results":"65","hashOfConfig":"44"},{"size":77,"mtime":1611050510933,"results":"66","hashOfConfig":"44"},{"size":4140,"mtime":1611139486252,"results":"67","hashOfConfig":"44"},{"size":805,"mtime":1611121574568,"results":"68","hashOfConfig":"44"},{"size":347,"mtime":1611105218098,"results":"69","hashOfConfig":"44"},{"size":376,"mtime":1611106863064,"results":"70","hashOfConfig":"44"},{"size":110,"mtime":1611108563786,"results":"71","hashOfConfig":"44"},{"size":561,"mtime":1611123181018,"results":"72","hashOfConfig":"44"},{"size":2228,"mtime":1611131126237,"results":"73","hashOfConfig":"44"},{"size":353,"mtime":1611128645602,"results":"74","hashOfConfig":"44"},{"size":1091,"mtime":1611131879138,"results":"75","hashOfConfig":"44"},{"size":81,"mtime":1611116780912,"results":"76","hashOfConfig":"44"},{"size":971,"mtime":1611125832565,"results":"77","hashOfConfig":"44"},{"size":231,"mtime":1611126172743,"results":"78","hashOfConfig":"44"},{"size":188,"mtime":1611125809413,"results":"79","hashOfConfig":"44"},{"size":99,"mtime":1611125344638,"results":"80","hashOfConfig":"44"},{"size":1556,"mtime":1611188172897,"results":"81","hashOfConfig":"44"},{"size":6660,"mtime":1611138573442,"results":"82","hashOfConfig":"44"},{"size":84,"mtime":1611140449822,"results":"83","hashOfConfig":"44"},{"size":3694,"mtime":1611189602287,"results":"84","hashOfConfig":"44"},{"size":987,"mtime":1611188460670,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},"9ulc22",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"89"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"89"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"137"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"99"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\App.js",["192"],"import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport GlobalStyles from \"../Styles/GlobalStyles\";\nimport Theme from \"../Styles/Theme\";\nimport Routes from \"./Routes\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst QUERY = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: ${props => props.theme.maxWidth};\n  width: 100%;\n`;\n\nexport default () => {\n  const {\n    data: { isLoggedIn }\n  } = useQuery(QUERY);\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <>\n        <GlobalStyles />\n        <Router>\n          <>\n            {isLoggedIn && <Header />}\n            <Wrapper>\n              <Routes isLoggedIn={isLoggedIn} />\n              <Footer />\n            </Wrapper>\n          </>\n        </Router>\n        <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\n      </>\n    </ThemeProvider>\n  );\n};",["193","194"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\index.js",[],["195","196"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Styles\\GlobalStyles.js",[],["197","198"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Styles\\Theme.js",["199"],"const BOX_BORDER = \"1px solid #E6E6E6\";\r\nconst BORDER_RADIUS = \"4px\";\r\n\r\nexport default {\r\n    maxWidth:\"935px\",\r\n    bgColor: \"#FAFAFA\",\r\n    blackColor: \"#262626\",\r\n    blueColor: \"#3897f0\",\r\n    navyColor: \"#364152\",\r\n    redColor:\"ED4956\",\r\n    brownColor: \"#B3795D\",\r\n    ivoryColor:\"#DB937B\",\r\n    darkGreyColor: \"#999\",\r\n    lightGreyColor: \"#c7c7c7\",\r\n    starColor:\"#F2CE5A\",\r\n    boxBorder: \"1px solid #E6E6E6\",\r\n    borderRadius: \"4px\",\r\n    whiteBox: `border-radius:${BORDER_RADIUS};\r\n               border:${BOX_BORDER};\r\n               background-color:white;\r\n              `\r\n};",["200","201"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Feed.js",["202","203"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport Loader from \"../Components/Loader\";\r\nimport Post from \"../Components/Post\";\r\nimport { Helmet } from \"rl-react-helmet\";\r\n\r\nconst FEED_QUERY = gql`\r\n  {\r\n    seeFeed {\r\n      id\r\n      location\r\n      caption\r\n      user {\r\n        id\r\n        avatar \r\n        username\r\n      }\r\n      files {\r\n        id\r\n        url\r\n      }\r\n      likeCount\r\n      isLiked\r\n      comments {\r\n        id\r\n        text\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 60vh;\r\n`;\r\n\r\nexport default () => {\r\n    const { data, loading } = useQuery(FEED_QUERY);\r\n    console.log(data)\r\n    return (\r\n        <Wrapper>\r\n            {loading && <Loader />}\r\n            {!loading && data && data.seeFeed && data.seeFeed.map(post =>\r\n                <Post key={post.id}\r\n                    id={post.id}\r\n                    user={post.user}\r\n                    files={post.files}\r\n                    likeCount={post.likeCount}\r\n                    caption={post.caption}\r\n                    avatar={post.user.avatar}\r\n                    isLiked={post.isLiked}\r\n                    comments={post.comments}\r\n                    createdAt={post.createdAt}\r\n                />)}\r\n        </Wrapper>);\r\n};","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Apollo\\Client.js",[],["204","205"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Apollo\\LocalState.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Button.js",["206"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Container = styled.button`\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  color: white;\r\n  font-weight: 600;\r\n  background-color: ${props => props.theme.navyColor};\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n  font-size: 14px;\r\n  cursor:pointer;\r\n`;\r\n\r\nconst Container1 = styled.button`\r\n  width: 100%;\r\n  border: 0;\r\n  border-radius: ${props => props.theme.borderRadius};\r\n  color: white;\r\n  font-weight: 600;\r\n  background-color: ${props => props.theme.lightGreyColor};\r\n  text-align: center;\r\n  padding: 7px 0px;\r\n  font-size: 14px;\r\n  cursor:pointer;\r\n`;\r\n\r\n\r\nconst Button = ({ text, onClick }) => (\r\n  <Container onClick={onClick}>{text}</Container>\r\n);\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Button;","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Footer.js",["207"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Input.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Hooks\\UseInput.js",["208"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Hooks\\useInput.js",["209"],"import { useState } from \"react\";\r\n\r\nexport default defaultValue => {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  const onChange = e => {\r\n    const {\r\n      target: { value }\r\n    } = e;\r\n    setValue(value);\r\n  };\r\n\r\n  return { value, onChange, setValue };\r\n};","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Auth\\AuthQueries.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Auth\\AuthPresenter.js",["210"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../../Components/Input\";\r\nimport Button from \"../../Components/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  border-radius:0px;\r\n  width: 100%;\r\n  max-width: 350px;\r\n`;\r\n\r\nconst StateChanger = styled(Box)`\r\n  text-align: center;\r\n  padding: 20px 0px;\r\n`;\r\n\r\nconst Link = styled.span`\r\n  color: ${props => props.theme.ivoryColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Form = styled(Box)`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  form {\r\n    width: 100%;\r\n    input {\r\n      width: 100%;\r\n      &:not(:last-child) {\r\n        margin-bottom: 7px;\r\n      }\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({\r\n  action,\r\n  username,\r\n  firstName,\r\n  lastName,\r\n  email,\r\n  setAction,\r\n  secret,\r\n  onSubmit\r\n}) => (\r\n  <Wrapper>\r\n    <Form>\r\n      {action === \"logIn\" && (\r\n        <form onSubmit={onSubmit}>\r\n          <Input placeholder={\"Email\"} {...email} type=\"email\" />\r\n          <Button text={\"Log in\"} />\r\n        </form>\r\n      )}{ action === 'signUp' && (\r\n        <form onSubmit={onSubmit}>\r\n          <Input placeholder={\"First name\"} {...firstName} />\r\n          <Input placeholder={\"Last name\"} {...lastName} />\r\n          <Input placeholder={\"Email\"} {...email} type=\"email\" />\r\n          <Input placeholder={\"Username\"} {...username} />\r\n          <Button text={\"Sign up\"} />\r\n        </form>\r\n      )}\r\n      {action === 'confirm' && <form onSubmit={onSubmit}>\r\n        <Input placeholder=\"전송된 값을 입력해주세요!\" required {...secret} />\r\n        <Button text={'Confirm'} />\r\n        </form>\r\n        }\r\n    </Form>\r\n    {action !== 'confirm' && (\r\n      <StateChanger>\r\n      {action === \"logIn\" ? (\r\n        <>\r\n          Don't have an account?{\" \"}\r\n          <Link onClick={() => setAction(\"signUp\")}>Sign up</Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          Have an account?{\" \"}\r\n          <Link onClick={() => setAction(\"logIn\")}>Log in</Link>\r\n        </>\r\n      )}\r\n    </StateChanger>)}\r\n  </Wrapper>\r\n);","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Auth\\AuthContainer.js",["211"],"import React, { useState } from \"react\";\r\nimport AuthPresenter from \"./AuthPresenter\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { LOG_IN, CREATE_ACCOUNT, CONFIRM_SECRET, LOG_USER_IN } from \"./AuthQueries\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default () => {\r\n  const [action, setAction] = useState(\"logIn\");\r\n  const username = useInput(\"\");\r\n  const firstName = useInput(\"\");\r\n  const secret = useInput(\"\");\r\n  const lastName = useInput(\"\");\r\n  const email = useInput(\"\");\r\n  \r\n  const [requestSecretMutation] = useMutation(LOG_IN, {\r\n    variables: { email: email.value }\r\n  });\r\n  const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\r\n    variables: {\r\n      email: email.value,\r\n      username: username.value,\r\n      firstName: firstName.value,\r\n      lastName: lastName.value\r\n    }\r\n  });\r\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\r\n    variables: {\r\n      email: email.value,\r\n      secret: secret.value\r\n    }\r\n  });\r\n\r\n  const [logUserInMutation] = useMutation(LOG_USER_IN)\r\n\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (action === \"logIn\") {\r\n      if (email.value !== \"\") {\r\n        try {\r\n          const { data: { requestSecret } } = await requestSecretMutation();\r\n          console.log(requestSecret);\r\n          if (!requestSecret) {\r\n            toast.error(\"Woops!, 등록된 정보가 없어요! 회원가입으로 안내해 드릴게요!\");\r\n            setTimeout(() => setAction(\"signUp\"), 3000);\r\n          } else {\r\n            toast.success('이메일함에서 시크릿 코드를 확인해주세요!')\r\n            setAction('confirm');\r\n          }\r\n        } catch {\r\n          toast.error(\"Woops!, 다시 시도해주세요!\");\r\n        }\r\n      } else {\r\n        toast.error(\"이메일은 반드시 작성해야해요!\");\r\n      }\r\n    } else if (action === \"signUp\") {\r\n      if (\r\n        email.value !== \"\" &&\r\n        username.value !== \"\" &&\r\n        firstName.value !== \"\" &&\r\n        lastName.value !== \"\"\r\n      ) {\r\n        try {\r\n          const { data: { createAccount } } = await createAccountMutation();\r\n          if (!createAccount) {\r\n            toast.error(\"Woops! 잠시만요! 다시 시도해주세요!\");\r\n          } else {\r\n            toast.success(\"환영해요! 당신만을 기다렸어요!\");\r\n            setTimeout(() => setAction(\"logIn\"), 3000);\r\n          }\r\n        } catch (e) {\r\n          toast.error(e.message);\r\n        }\r\n      } else {\r\n        toast.error(\"모든 양식을 작성해 주세요!\");\r\n      }\r\n    } else if (action === \"confirm\") { \r\n      if (secret.value !== \"\") { \r\n        try {\r\n          const { data: { confirmSecret: token } } = await confirmSecretMutation();\r\n          if (token !== \"\" && token !== undefined) {\r\n            await logUserInMutation({ variables: { token } });\r\n          } else {\r\n            throw Error();\r\n          } \r\n        } catch (e) { \r\n          toast.error('Woops! 비밀코드가 일치하지 않아요!');\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthPresenter\r\n      setAction={setAction}\r\n      action={action}\r\n      username={username}\r\n      firstName={firstName}\r\n      lastName={lastName}\r\n      email={email}\r\n      secret={secret}\r\n      onSubmit={onSubmit}\r\n    />\r\n  );\r\n};","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Auth\\index.js",[],["212","213"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Explore.js",["214","215"],"export default () => <><a>Explore</a></>;",["216","217"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Header.js",[],["218","219"],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Icons.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Routes.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Loader.js",["220"],"// import React from \"react\";\r\n// import styled, { keyframes } from \"styled-components\";\r\n// import { LoadingLogo } from \"./Icons\";\r\n\r\n// const Animation = keyframes`\r\n//     0%{\r\n//         opacity:0\r\n//     }\r\n//     50%{\r\n//         opacity:1\r\n//     }\r\n//     100%{\r\n//         opacity:0;\r\n//     }\r\n// `;\r\n\r\n// const Loader = styled.div`\r\n//   animation: ${Animation} 1s linear infinite;\r\n// `;\r\n\r\n// export default () => (\r\n//   <Loader>\r\n//     <LoadingLogo size={36} />\r\n//   </Loader>\r\n// );\r\n\r\nimport React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Loading } from \"./Icons\";\r\n\r\nconst loadingCircleAni = keyframes`\r\n   0% { stroke-dashoffset: 157; }\r\n   75% { stroke-dashoffset: -147; }\r\n   100% { stroke-dashoffset: -157; }\r\n`;\r\n\r\nconst loadingSpin = keyframes`\r\n    100% { transform: rotate(360deg); }\r\n`;\r\n\r\nconst CssLoading = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 100;\r\n    animation: ${loadingSpin} 2s infinite;\r\n`;\r\n\r\nconst Animation = styled.div`\r\n    stroke: black;\r\n    stroke-width: 4;\r\n    stroke-dasharray: 157;\r\n    stroke-dashoffset: 0;\r\n    fill: transparent;\r\n    animation: ${loadingCircleAni} 1s infinite;\r\n`;\r\n\r\n\r\nexport default () => (\r\n    <Animation>\r\n        <CssLoading>\r\n            <Loading />\r\n        </CssLoading>\r\n    </Animation>\r\n);","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Post\\PostContainer.js",["221"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport PostPresenter from \"./PostPresenter\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { TOGGLE_LIKE, ADD_COMMENT } from \"./PostQueries\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst PostContainer = ({\r\n  id,\r\n  user,\r\n  files,\r\n  likeCount,\r\n  isLiked,\r\n  comments,\r\n  createdAt,\r\n  caption,\r\n  location,\r\n  avatar\r\n}) => {\r\n  const [isLikedS, setIsLiked] = useState(isLiked);\r\n  const [likeCountS, setLikeCount] = useState(likeCount);\r\n  const [currentItem, setCurrentItem] = useState(0);\r\n  const comment = useInput(\"\");\r\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\r\n    variables: { postId: id }\r\n  });\r\n  const [selfComments, setSelfComments] = useState([]);\r\n  const [addCommentMutation] = useMutation(ADD_COMMENT, {\r\n    variables: { postId: id, text: comment.value }\r\n  });\r\n  const slide = () => {\r\n    const totalFiles = files.length;\r\n    if (currentItem === totalFiles - 1) {\r\n      setTimeout(() => setCurrentItem(0), 3000);\r\n    } else {\r\n      setTimeout(() => setCurrentItem(currentItem + 1), 3000);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    slide();\r\n  }, [currentItem]);\r\n\r\n  const toggleLike = () => {\r\n    toggleLikeMutation();\r\n    if (isLikedS === true) {\r\n      setIsLiked(false);\r\n      setLikeCount(likeCountS - 1);\r\n    } else {\r\n      setIsLiked(true);\r\n      setLikeCount(likeCountS + 1);\r\n    }\r\n  };\r\n\r\n  const onKeyUp = async event => {\r\n    const { which } = event;\r\n    if (which === 13) {\r\n      event.preventDefault();\r\n      try {\r\n        const {\r\n          data: { addComment }\r\n        } = await addCommentMutation();\r\n        setSelfComments([...selfComments, addComment]);\r\n        comment.setValue(\"\");\r\n      } catch {\r\n        toast.error(\"Can't send comment 😔\");\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <PostPresenter\r\n      user={user}\r\n      files={files}\r\n      likeCount={likeCountS}\r\n      location={location}\r\n      caption={caption}\r\n      isLiked={isLikedS}\r\n      comments={comments}\r\n      createdAt={createdAt}\r\n      newComment={comment}\r\n      setIsLiked={setIsLiked}\r\n      setLikeCount={setLikeCount}\r\n      currentItem={currentItem}\r\n      toggleLike={toggleLike}\r\n      onKeyUp={onKeyUp}\r\n      avatar={avatar}\r\n      selfComments={selfComments}\r\n    />\r\n  );\r\n};\r\n\r\nPostContainer.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  user: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string,\r\n    username: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  files: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      url: PropTypes.string.isRequired\r\n    })\r\n  ).isRequired,\r\n  likeCount: PropTypes.number.isRequired,\r\n  isLiked: PropTypes.bool.isRequired,\r\n  comments: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        username: PropTypes.string.isRequired\r\n      }).isRequired\r\n    })\r\n  ).isRequired,\r\n  caption: PropTypes.string.isRequired,\r\n  location: PropTypes.string,\r\n  createdAt: PropTypes.string.isRequired\r\n};\r\n\r\nexport default PostContainer;","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Post\\index.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Post\\PostPresenter.js",["222"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\nimport FatText from \"../FatText\";\r\nimport Avatar from \"../Avatar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { HeartFull, HeartEmpty, Comment as CommentIcon} from \"../Icons\";\r\n\r\nconst Post = styled.div`\r\n  ${props => props.theme.whiteBox};\r\n  width: 100%;\r\n  max-width: 600px;\r\n  user-select: none;\r\n  margin-bottom: 25px;\r\n  a{\r\n    color:inherit;\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  padding: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserColumn = styled.div`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Location = styled.span`\r\n  display: block;\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Files = styled.div`\r\n  position: relative;\r\n  padding-bottom: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst File = styled.div`\r\n  max-width: 100%;\r\n  width: 100%;\r\n  height: 600px;\r\n  position: absolute;\r\n  top: 0;\r\n  background-image: url(${props => props.src});\r\n  background-size: cover;\r\n  background-position: center;\r\n  opacity: ${props => (props.showing ? 1 : 0)};\r\n  transition: opacity 0.5s linear;\r\n`;\r\n\r\nconst Button = styled.span`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Meta = styled.div`\r\n  padding: 15px;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  ${Button} {\r\n    &:first-child {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Timestamp = styled.span`\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  opacity: 0.5;\r\n  display: block;\r\n  font-size: 12px;\r\n  margin: 10px 0px;\r\n  padding-bottom: 10px;\r\n  border-bottom: ${props => props.theme.lightGreyColor} 1px solid;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n  border: none;\r\n  width: 100%;\r\n  resize: none;\r\n  font-size: 14px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n`;\r\n\r\nconst Comments = styled.ul`\r\n  margin-top:10px;\r\n`;\r\n\r\nconst Comment = styled.li`\r\n  margin-bottom:7px;\r\n  span{\r\n    margin-right:5px;\r\n  }\r\n`;\r\n\r\n// const Caption = styled.div`\r\n//   margin-top : 15px;\r\n//   margin-left : 10px;\r\n//   margin-bottom:7px;\r\n// `;\r\n\r\n\r\nconst Caption = styled.div`\r\n  margin : 10px 0px\r\n`;\r\n\r\nexport default ({\r\n  user: { username, avatar },\r\n  location,\r\n  files,\r\n  isLiked,\r\n  likeCount,\r\n  createdAt,\r\n  newComment,\r\n  caption,\r\n  currentItem,\r\n  toggleLike,\r\n  onKeyUp,\r\n  comments,\r\n  selfComments\r\n}) => (\r\n  <Post>\r\n    <Header>\r\n      <Avatar size=\"sm\" url={avatar} />\r\n      <UserColumn>\r\n        <Link to={`/${username}`}>\r\n          <FatText text={username} />\r\n          </Link>\r\n        <Location>{location}</Location>\r\n      </UserColumn>\r\n    </Header>\r\n    <Files>\r\n      {files &&\r\n\r\n        files.map((file, index) => (\r\n          <File key={file.id} src={file.url} showing={index === currentItem} />\r\n        ))}\r\n    </Files>\r\n    {/* <Caption>{caption}</Caption>  */}\r\n    <Meta>\r\n      <Buttons>\r\n        <Button onClick={toggleLike}>\r\n          {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n        </Button>\r\n        <Button>\r\n          -\r\n          <CommentIcon />\r\n        </Button>\r\n      </Buttons>\r\n      <FatText text={likeCount === 1 ? \"1 like\" : `${likeCount} likes`} />\r\n      <Caption><FatText text={username} />{caption}</Caption>\r\n      {comments && (\r\n        <Comments>\r\n          {comments.map(comment => (\r\n            <Comment key={comment.id}>\r\n              <FatText text={comment.user.username} />\r\n              {comment.text}\r\n            </Comment>\r\n          ))}\r\n          {selfComments.map(comment => (\r\n            <Comment key={comment.id}>\r\n              <FatText text={comment.user.username} />\r\n              {comment.text}\r\n            </Comment>\r\n          ))}\r\n        </Comments>\r\n      )}\r\n      <Timestamp>{createdAt}</Timestamp>\r\n      <Textarea\r\n        placeholder={\"Add a comment...\"}\r\n        value={newComment.value}\r\n        onChange={newComment.onChange}\r\n        onKeyPress={onKeyUp} />\r\n    </Meta>\r\n  </Post>\r\n);","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Avatar.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FatText.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\Post\\PostQueries.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\SharedQueries.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Search\\SearchContainer.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Search\\SearchPresenter.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Search\\SearchQueries.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\UserCard.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Search\\index.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FollowButton\\FollowButtonContainer.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FollowButton\\FollowButtonQueries.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FollowButton\\FollowButtonPresenter.js",["223"],"import React from \"react\";\r\nimport Button from \"../Button\";\r\n\r\nexport default ({ isFollowing, onClick }) => (\r\n  <Button text={isFollowing ? \"Unfollow\" : \"Follow\"} onClick={onClick} />\r\n);","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\FollowButton\\index.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Components\\SquarePost.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\DetailPost.js",["224"],"\r\nexport default () => \"디테일임^^\";\r\n\r\n// import React from \"react\";\r\n// import styled from \"styled-components\";\r\n// import { gql } from \"apollo-boost\";\r\n// import { useQuery } from \"react-apollo-hooks\";\r\n// import Loader from \"../Components/Loader\";\r\n// import Post from \"../Components/Post\";\r\n// import withRouter from \"react-router-dom/withRouter\";\r\n// import TextareaAutosize from \"react-autosize-textarea\";\r\n// import Avatar from \"../Components/Avatar\";\r\n// import FatText from \"../Components/FatText\";\r\n// import { HeartFull, HeartEmpty, Comment as CommentIcon } from \"../Components/Icons\";\r\n// import { Link } from \"react-router-dom\";\r\n// import useInput from \"../Hooks/useInput\"\r\n\r\n// const Caption = styled.div`\r\n//   margin : 10px 0px\r\n// `;\r\n\r\n// const PostD = styled.div`\r\n//   ${props => props.theme.whiteBox};\r\n//   width: 100%;\r\n//   max-width: 600px;\r\n//   user-select: none;\r\n//   margin-bottom: 25px;\r\n//   a{\r\n//     color:inherit;\r\n//   }\r\n// `;\r\n\r\n// const Header = styled.header`\r\n//   padding: 15px;\r\n//   display: flex;\r\n//   align-items: center;\r\n// `;\r\n\r\n// const UserColumn = styled.div`\r\n//   margin-left: 10px;\r\n// `;\r\n\r\n// const Location = styled.span`\r\n//   display: block;\r\n//   margin-top: 5px;\r\n//   font-size: 12px;\r\n// `;\r\n\r\n// const Files = styled.div`\r\n//   position: relative;\r\n//   padding-bottom: 100%;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: stretch;\r\n//   flex-shrink: 0;\r\n// `;\r\n\r\n// const File = styled.div`\r\n//   max-width: 100%;\r\n//   width: 100%;\r\n//   height: 600px;\r\n//   position: absolute;\r\n//   top: 0;\r\n//   background-image: url(${props => props.src});\r\n//   background-size: cover;\r\n//   background-position: center;\r\n//   opacity: ${props => (props.showing ? 1 : 0)};\r\n//   transition: opacity 0.5s linear;\r\n// `;\r\n\r\n// const Button = styled.span`\r\n//   cursor: pointer;\r\n// `;\r\n\r\n// const Meta = styled.div`\r\n//   padding: 15px;\r\n// `;\r\n\r\n// const Buttons = styled.div`\r\n//   ${Button} {\r\n//     &:first-child {\r\n//       margin-right: 10px;\r\n//     }\r\n//   }\r\n//   margin-bottom: 10px;\r\n// `;\r\n\r\n// const Timestamp = styled.span`\r\n//   font-weight: 400;\r\n//   text-transform: uppercase;\r\n//   opacity: 0.5;\r\n//   display: block;\r\n//   font-size: 12px;\r\n//   margin: 10px 0px;\r\n//   padding-bottom: 10px;\r\n//   border-bottom: ${props => props.theme.lightGreyColor} 1px solid;\r\n// `;\r\n\r\n// const Textarea = styled(TextareaAutosize)`\r\n//   border: none;\r\n//   width: 100%;\r\n//   resize: none;\r\n//   font-size: 14px;\r\n//   &:focus {\r\n//     outline: none;\r\n//   }\r\n//   font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n// `;\r\n\r\n// const Comments = styled.ul`\r\n//   margin-top:10px;\r\n// `;\r\n\r\n// const Comment = styled.li`\r\n//   margin-bottom:7px;\r\n//   span{\r\n//     margin-right:5px;\r\n//   }\r\n// `;\r\n\r\n// const Wrapper = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   align-items: center;\r\n//   min-height: 60vh;\r\n// `;\r\n\r\n// const DETAIL_QUERY = gql`\r\n//   query seeFullPost($id: String!) {\r\n//      seeFullPost(id: $id) {\r\n//       id\r\n//       location\r\n//       caption\r\n//       user {\r\n//         id\r\n//         avatar \r\n//         username\r\n//       }\r\n//       files {\r\n//         id\r\n//         url\r\n//       }\r\n//       likeCount\r\n//       isLiked\r\n//       comments {\r\n//         id\r\n//         text\r\n//         user {\r\n//           id\r\n//           username\r\n//         }\r\n//       }\r\n//       createdAt\r\n//     }\r\n//   }\r\n \r\n// `;\r\n\r\n// export default withRouter(({ match: { params: { postid } } }) => {\r\n//     const { data, loading } = useQuery(DETAIL_QUERY, { variables: { id:postid } });\r\n//     if (loading) {\r\n//         return (\r\n//             <Wrapper>\r\n//                 <Loader />\r\n//             </Wrapper>\r\n//         );\r\n//     } else {\r\n//         console.log(data);\r\n//         const {\r\n//             seeFullPost: {\r\n//                 user,\r\n//                 location,\r\n//                 files,\r\n//                 isLiked,\r\n//                 likeCount,\r\n//                 createdAt,\r\n//                 newComment,\r\n//                 caption,\r\n//                 currentItem,\r\n//                 toggleLike,\r\n//                 onKeyUp,\r\n//                 comments\r\n//             }\r\n//         } = data;\r\n//         return (\r\n//             <PostD>\r\n//                 <Header>\r\n//                     <Avatar size=\"sm\" url={user.avatar} />\r\n//                     <UserColumn>\r\n//                         <Link to={`/${user.username}`}>\r\n//                             <FatText text={user.username} />\r\n//                         </Link>\r\n//                         <Location>{location}</Location>\r\n//                     </UserColumn>\r\n//                     </Header>\r\n//                 <Files>\r\n//                     {files &&\r\n//                         files.map((file, index) => (\r\n//                             <File key={file.id} src={file.url} showing={index === currentItem} />\r\n//                         ))}\r\n//                 </Files>\r\n//                 {/* <Caption>{caption}</Caption>  */}\r\n//                 <Meta>\r\n//                     <Buttons>\r\n//                         <Button onClick={toggleLike}>\r\n//                             {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n//                         </Button>\r\n//                         <Button>\r\n//                             -\r\n//            <CommentIcon />\r\n//                         </Button>\r\n//                     </Buttons>\r\n//                     <FatText text={likeCount === 1 ? \"1 like\" : `${likeCount} likes`} />\r\n//                     <Caption><FatText text={user.username} />{caption}</Caption>\r\n//                     {comments && (\r\n//                         <Comments>\r\n//                                                         {comments.map(comment => (\r\n//                                 <Comment key={comment.id}>\r\n//                                     <FatText text={comment.user.username} />\r\n//                                     {comment.text}\r\n//                                 </Comment>\r\n//                             ))}\r\n//                         </Comments>\r\n//                     )}\r\n//                     <Timestamp>{createdAt}</Timestamp>\r\n//                     <Textarea\r\n//                         placeholder={\"Add a comment...\"}\r\n//                         value={newComment.value}\r\n//                         onChange={newComment.onChange}\r\n//                         onKeyPress={onKeyUp} />\r\n//                 </Meta>\r\n//             </PostD>\r\n//         )\r\n//     }\r\n// }\r\n// );","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Profile\\index.js",[],"D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Profile\\ProfilePresenter.js",["225"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"rl-react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Avatar from \"../../Components/Avatar\";\r\nimport FatText from \"../../Components/FatText\";\r\nimport FollowButton from \"../../Components/FollowButton\";\r\nimport SquarePost from \"../../Components/SquarePost\";\r\nimport Button from \"../../Components/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst HeaderColumn = styled.div``;\r\n\r\nconst UsernameRow = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Username = styled.span`\r\n  font-size: 26px;\r\n  display: block;\r\n`;\r\n\r\nconst Counts = styled.ul`\r\n  display: flex;\r\n  margin: 15px 0px;\r\n`;\r\n\r\nconst Count = styled.li`\r\n  font-size: 16px;\r\n  &:not(:last-child) {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nconst FullName = styled(FatText)`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Bio = styled.p`\r\n  margin: 10px 0px;\r\n`;\r\n\r\nconst Posts = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, 200px);\r\n  grid-template-rows: 200px;\r\n  grid-auto-rows: 200px;\r\n`;\r\n\r\nexport default ({ loading, data, logOut }) => {\r\n    if (loading === true) {\r\n        return (\r\n            <Wrapper>\r\n                <Loader />\r\n            </Wrapper>\r\n        );\r\n    } else if (!loading && data && data.seeUser) {\r\n        const {\r\n            seeUser: {\r\n                id,\r\n                avatar,\r\n                username,\r\n                fullName,\r\n                isFollowing,\r\n                isSelf,\r\n                bio,\r\n                followingCount,\r\n                //followersCount,\r\n                postsCount,\r\n                posts\r\n            }\r\n        } = data;\r\n        return (\r\n            <Wrapper>\r\n                <Helmet>\r\n                    <title>{username} | Prismagram</title>\r\n                </Helmet>\r\n                <Header>\r\n                    <HeaderColumn>\r\n                        <Avatar size=\"lg\" url={avatar} />\r\n                    </HeaderColumn>\r\n                    <HeaderColumn>\r\n                        <UsernameRow>\r\n                            <Username>{username}</Username>{\" \"}\r\n\r\n                        </UsernameRow>\r\n                        <Counts>\r\n                            <Count>\r\n                                <FatText text={String(postsCount)} /> posts\r\n              </Count>\r\n                            {/* <Count>\r\n                                <FatText text={String(followersCount)} /> followers\r\n              </Count> */}\r\n                            <Count>\r\n                                <FatText text={String(followingCount)} /> following\r\n              </Count>\r\n\r\n                        </Counts>\r\n                        <FullName text={fullName} />\r\n                        <Bio>{bio}</Bio>\r\n                {isSelf ? <Button onClick={logOut} text=\"Log Out\"/> : <FollowButton isFollowing={isFollowing} id={id} />}\r\n                    </HeaderColumn>\r\n                </Header>\r\n                <Posts>\r\n                    {posts &&\r\n                        posts.map(post => (\r\n                            <SquarePost\r\n                                key={post.id}\r\n                                likeCount={post.likeCount}\r\n                                commentCount={post.commentCount}\r\n                                file={post.files[0]}\r\n                            />\r\n                        ))}\r\n                </Posts>\r\n            </Wrapper>\r\n        );\r\n    }\r\n    return null;\r\n};","D:\\EMBEDED\\Final_Project\\semicolon_frontend\\src\\Routes\\Profile\\ProfileContainer.js",[],{"ruleId":"226","severity":1,"message":"227","line":26,"column":1,"nodeType":"228","endLine":48,"endColumn":3},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"229","replacedBy":"233"},{"ruleId":"231","replacedBy":"234"},{"ruleId":"229","replacedBy":"235"},{"ruleId":"231","replacedBy":"236"},{"ruleId":"226","severity":1,"message":"237","line":4,"column":1,"nodeType":"228","endLine":22,"endColumn":3},{"ruleId":"229","replacedBy":"238"},{"ruleId":"231","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":7,"column":10,"nodeType":"242","messageId":"243","endLine":7,"endColumn":16},{"ruleId":"226","severity":1,"message":"227","line":46,"column":1,"nodeType":"228","endLine":65,"endColumn":3},{"ruleId":"229","replacedBy":"244"},{"ruleId":"231","replacedBy":"245"},{"ruleId":"240","severity":1,"message":"246","line":18,"column":7,"nodeType":"242","messageId":"243","endLine":18,"endColumn":17},{"ruleId":"226","severity":1,"message":"227","line":38,"column":1,"nodeType":"228","endLine":77,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":3,"column":1,"nodeType":"228","endLine":14,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":3,"column":1,"nodeType":"228","endLine":14,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":49,"column":1,"nodeType":"228","endLine":96,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":8,"column":1,"nodeType":"228","endLine":105,"endColumn":3},{"ruleId":"229","replacedBy":"247"},{"ruleId":"231","replacedBy":"248"},{"ruleId":"226","severity":1,"message":"227","line":1,"column":1,"nodeType":"228","endLine":1,"endColumn":42},{"ruleId":"249","severity":1,"message":"250","line":1,"column":24,"nodeType":"251","endLine":1,"endColumn":27},{"ruleId":"229","replacedBy":"252"},{"ruleId":"231","replacedBy":"253"},{"ruleId":"229","replacedBy":"254"},{"ruleId":"231","replacedBy":"255"},{"ruleId":"226","severity":1,"message":"227","line":64,"column":1,"nodeType":"228","endLine":70,"endColumn":3},{"ruleId":"256","severity":1,"message":"257","line":42,"column":6,"nodeType":"258","endLine":42,"endColumn":19,"suggestions":"259"},{"ruleId":"226","severity":1,"message":"227","line":119,"column":1,"nodeType":"228","endLine":188,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":4,"column":1,"nodeType":"228","endLine":6,"endColumn":3},{"ruleId":"226","severity":1,"message":"227","line":2,"column":1,"nodeType":"228","endLine":2,"endColumn":31},{"ruleId":"226","severity":1,"message":"227","line":63,"column":1,"nodeType":"228","endLine":132,"endColumn":3},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["260"],"no-negated-in-lhs",["261"],["260"],["261"],["260"],["261"],"Assign object to a variable before exporting as module default",["260"],["261"],"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar",["260"],["261"],"'Container1' is assigned a value but never used.",["260"],["261"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["260"],["261"],["260"],["261"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slide'. Either include it or remove the dependency array.","ArrayExpression",["262"],"no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},"Update the dependencies array to be: [currentItem, slide]",{"range":"265","text":"266"},[1242,1255],"[currentItem, slide]"]